name: Deploy Production EC2 Instance
on:
  push:
    branches: [ main ]
 
jobs:
  build:
    name:  Production Build
    runs-on: windows-latest
    env:
      IIS_SERVER_COMPUTER_NAME: ${{ secrets.IIS_SERVER_COMPUTER_NAME }}
      IIS_WEBSITE_NAME: ${{ secrets.IIS_WEBSITE_NAME }}
      IIS_SERVER_USERNAME: ${{ secrets.IIS_SERVER_USERNAME }}
      IIS_SERVER_PASSWORD: ${{ secrets.IIS_SERVER_PASSWORD }}
      RECYCLE_APP_NAME: ${{ secrets.RECYCLE_APP_NAME }}
      WEBSITE_CONTENT_PATH: ${{ secrets.WEBSITE_CONTENT_PATH }}
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore -r win-x64 /p:DebugType=None
    
    - name: Publish
      run: dotnet publish CICDPracticalRepo/CICDPracticalRepo.csproj -c Release --no-build --no-restore -o PublishPro/CICDPracticalRepo/ -r win-x64 --self-contained false /p:DebugType=None
        
    - name: Stop Application Pool
      shell: cmd
      run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -allowUntrusted -source:recycleApp -dest:recycleApp="${{ env.RECYCLE_APP_NAME }}",recycleMode="StopAppPool",computerName="${{ env.IIS_SERVER_COMPUTER_NAME }}/msdeploy.axd?site=${{ env.IIS_WEBSITE_NAME }}",username="${{ env.IIS_SERVER_USERNAME }}",password="${{ env.IIS_SERVER_PASSWORD }}",AuthType="Basic"'
    - name: Deploy Application to EC2-IIS
      shell: cmd
      run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -useCheckSum -allowUntrusted -source:contentPath="D:\a\CICDPracticalRepo\CICDPracticalRepo\PublishPro\CICDPracticalRepo\" -dest:contentPath="${{ env.WEBSITE_CONTENT_PATH }}",computerName="${{ env.IIS_SERVER_COMPUTER_NAME }}/msdeploy.axd?site=${{ env.IIS_WEBSITE_NAME }}",username="${{ env.IIS_SERVER_USERNAME }}",password="${{ env.IIS_SERVER_PASSWORD }}",authtype="Basic"'
    - name: Start Application Pool
      shell: cmd
      run: '"C:/Program Files (x86)/IIS/Microsoft Web Deploy V3/msdeploy.exe" -verb:sync -allowUntrusted -source:recycleApp -dest:recycleApp="${{ env.RECYCLE_APP_NAME }}",recycleMode="StartAppPool",computerName="${{ env.IIS_SERVER_COMPUTER_NAME }}/msdeploy.axd?site=${{ env.IIS_WEBSITE_NAME }}",username="${{ env.IIS_SERVER_USERNAME }}",password="${{ env.IIS_SERVER_PASSWORD }}",AuthType="Basic"'

    - name: MSTeams Notification
      uses: skitionek/notify-microsoft-teams@master
      if: always()
      with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
